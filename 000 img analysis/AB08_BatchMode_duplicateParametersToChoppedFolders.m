%% path

AB00_importExperimentPathList_oda1
experiment_path_list = keepExperimentListByDate(experiment_path_list,...
                       '190728');
chopFdnameList = {'01XY','02MinXY','03Axial'}; 
% under each fdname, multiple subfolders each contains an image sequence
% recording multiple flashes.

%%

for i_exp = 1:numel(experiment_path_list)
    experiment_path = experiment_path_list{i_exp};
    [experiment,rootFdpth,cellNo] = parseExperimentPath(experiment_path);

    AB00_experimentalConditions;
    clearvars -except experiment_path_list chopFdnameList ...
              experiment_path rootFdpth experiment cellNo fps 
          
    for i_fd = 1:numel(chopFdnameList)
        chopFdname = chopFdnameList{i_fd};
        if ~exist(fullfile(rootFdpth,cellNo,chopFdname),'dir')
            fprintf('"%s" does not have "%s"\n',experiment, chopFdname);
            continue
        else 
            fprintf('Processing "%s-%s"\n',experiment, chopFdname);
            
        end
        % MF_ : multi-flash
        MF_fdList = dir(fullfile(rootFdpth,cellNo,chopFdname));
        MF_fdList = MF_fdList([MF_fdList.isdir]);
        MF_fdList(1:2) = [] ;
        MF_fdNameList  = {MF_fdList.name};
        
        to_rootFdpth = [ fullfile(rootFdpth,...
                         [cellNo,'_Chopped'],...
                         chopFdname),  '/'];
        cutLogFdpth  = [ fullfile(rootFdpth,...
                         '999 CutLog',...
                         chopFdname),  '/'];  
                                
        UDD_filepath = fullfile(rootFdpth,cellNo,chopFdname,...
            'User defined data.mat');
        FIW_filepath = fullfile(rootFdpth,cellNo,chopFdname,...
            'Flagellar interrogation windows.mat');
        %% load
        load(UDD_filepath,...
            'mama_folder_path','SFL','NoFd',...
            'file_name_list','file_format_list','image_number_list',...
            'ref_img_idx_list','FFFN_list','img_size_list',...
            'ref_point_list','CBnP_mask_list','crop1_list','crop2_list',...
            'NoI','Fs','section_size',...
            'process_all_img','to_save_all_shift','to_save_all_adjust',...
            'Fs','Ts','jsize','isize','dim','sigma','gauss_filter',...
            'section_size')
        
        load(FIW_filepath,...
            'mask_1_list'     ,'mask_2_list',...
            'mask_1_size_list','mask_2_size_list',...
            'where_to_find_f_imp','save_figures_or_not')
        
        % update folder info. 
        % Old NoFd = num. of multiflash recordings
        % Old mama_folder_path points to the unchopped
        % Old SFL referred to the folders of multiflash recordings
        %     and the names at this stage may already be changed to the
        %     applied piezo frequencies.
        mama_folder_path = to_rootFdpth;
        SFL     = dir(mama_folder_path);         % Sub Folder List
        SFL     = SFL([SFL(:).isdir]);
        SFL(1:2)= [];                            % delelte '..' and '.'
        NoF     = numel(SFL);                    % No. of Flashes
        NoFd    = NoF;                           % update NoFd  
        %% preallocations
        temp_file_name_list   = cell(NoF,1);
        temp_file_format_list = cell(NoF,1);
        temp_FFFN_list        = cell(NoF,1);
        temp_CBnP_mask_list   = cell(NoF,1);
        temp_mask_1_list      = cell(NoF,1);
        temp_mask_2_list      = cell(NoF,1);
        temp_ref_img_idx_list = zeros(NoF,1);
        temp_image_number_list= zeros(NoF,1);
        temp_mask_1_size_list = zeros(NoF,1);
        temp_mask_2_size_list = zeros(NoF,1);
        temp_img_size_list    = zeros(NoF,2);
        temp_ref_point_list   = zeros(NoF,2);
        temp_crop1_list       = zeros(NoF,4);
        temp_crop2_list       = zeros(NoF,4); 
        %% treat each multiflash recording
        for i_MF_fd = 1:numel(MF_fdNameList)
            MF_fdName = MF_fdNameList{i_MF_fd};         
%             img_fdpth      = [ fullfile(experiment_path,chopFdname,...
%                              MF_fdName),   '/'];     
            cutLogFilepath = fullfile(cutLogFdpth,...
                             ['CutLog_',MF_fdName,'.mat']);
            if exist(cutLogFilepath,'file')
                load(cutLogFilepath,'NoF')
            else
                NoF = 6;
                disp(['Use default NoF, every element in raw UDD and',...
                     ' FIW file will be copied ',num2str(NoF,'%d'),...
                     ' times']);
            end
            
            idxRange_thisRecord = (i_MF_fd-1)*NoF + 1  :...
                                   i_MF_fd   *NoF;
            %% Cells    
            temp_file_name_list(...
            idxRange_thisRecord)    = file_name_list(...
                                      i_MF_fd);
            temp_file_format_list(...
            idxRange_thisRecord)    = file_format_list(...
                                      i_MF_fd);                              
            temp_FFFN_list(...
            idxRange_thisRecord)    = FFFN_list(...
                                      i_MF_fd);    
            temp_CBnP_mask_list(...
            idxRange_thisRecord)    = CBnP_mask_list(...
                                      i_MF_fd);     
            temp_mask_1_list(...
            idxRange_thisRecord)    = mask_1_list(...
                                      i_MF_fd);   
            temp_mask_2_list(...
            idxRange_thisRecord)    = mask_2_list(...
                                      i_MF_fd);   
           
            %% Arrays
            % Incorrect values, kept for compatibility
            temp_ref_img_idx_list(...
            idxRange_thisRecord)    = ref_img_idx_list(i_MF_fd);
        
            temp_image_number_list(...
            idxRange_thisRecord)    = image_number_list(i_MF_fd);
            
            % Correct values
            temp_mask_1_size_list(...
            idxRange_thisRecord)    = mask_1_size_list(i_MF_fd);    
        
            temp_mask_2_size_list(...
            idxRange_thisRecord)    = mask_2_size_list(i_MF_fd);  
                                  
            temp_img_size_list(...
            idxRange_thisRecord,1)  = img_size_list(i_MF_fd,1); 
        
            temp_img_size_list(...
            idxRange_thisRecord,2)  = img_size_list(i_MF_fd,2); 

            temp_ref_point_list(...
            idxRange_thisRecord,1)  = ref_point_list(i_MF_fd,1); 
        
            temp_ref_point_list(...
            idxRange_thisRecord,2)  = ref_point_list(i_MF_fd,2); 

            for i_col = 1:4
                temp_crop1_list(...
                idxRange_thisRecord,i_col) = crop1_list(i_MF_fd,i_col);
            
                temp_crop2_list(...
                idxRange_thisRecord,i_col) = crop2_list(i_MF_fd,i_col);
            end        
        end
        %% Update values
        file_name_list   = temp_file_name_list;
        file_format_list = temp_file_format_list;
        FFFN_list        = temp_FFFN_list;
        CBnP_mask_list   = temp_CBnP_mask_list;
        mask_1_list      = temp_mask_1_list;
        mask_2_list      = temp_mask_2_list;
        
        ref_img_idx_list = temp_ref_img_idx_list;
        image_number_list= temp_image_number_list;
        mask_1_size_list = temp_mask_1_size_list;
        mask_2_size_list = temp_mask_2_size_list;
        
        img_size_list    = temp_img_size_list;
        ref_point_list   = temp_ref_point_list;
        
        crop1_list       = temp_crop1_list;
        crop2_list       = temp_crop2_list;
        
        clearvars temp_file_name_list     temp_file_format_list ...
            temp_FFFN_list          temp_CBnP_mask_list ...
            temp_mask_1_list        temp_mask_2_list...
            temp_ref_img_idx_list   temp_image_number_list...
            temp_mask_1_size_list   temp_mask_2_size_list...
            temp_img_size_list      temp_ref_point_list...
            temp_crop1_list         temp_crop2_list
            
        save(fullfile(to_rootFdpth,...
            'User defined data.mat'),...
            'mama_folder_path','SFL','NoFd',...
            'file_name_list','file_format_list','image_number_list',...
            'ref_img_idx_list','FFFN_list','img_size_list',...
            'ref_point_list','CBnP_mask_list','crop1_list','crop2_list',...
            'NoI','Fs','section_size',...
            'process_all_img','to_save_all_shift','to_save_all_adjust',...
            'Fs','Ts','jsize','isize','dim','sigma','gauss_filter',...
            'section_size')
        save(fullfile(to_rootFdpth,...
            'Flagellar interrogation windows.mat'),...
            'mask_1_list'     ,'mask_2_list',...
            'mask_1_size_list','mask_2_size_list',...
            'where_to_find_f_imp','save_figures_or_not')
        disp([chopFdname,' done'])  
    end
end
